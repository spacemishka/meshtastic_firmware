; Add to existing platformio.ini

[env:time_window_test]
platform = native
build_flags = 
    -D NATIVE_BUILD
    -D HAS_TIME_WINDOW
    -I src
    -I test
    -I .pio/libdeps/native/Unity/src
    ${env.build_flags}

lib_deps =
    throwtheswitch/Unity @ ^2.5.2
    nanopb/Nanopb @ ^0.4.7
    
test_build_project_src = true
test_framework = unity
test_filter = test_time_window_system

build_src_filter = 
    +<*>
    +<../test/test_time_window_system.cpp>

[env:time_window_esp32]
extends = env:esp32_base
build_flags = 
    ${env:esp32_base.build_flags}
    -D HAS_TIME_WINDOW
    -I src
    -I test

lib_deps =
    ${env:esp32_base.lib_deps}
    throwtheswitch/Unity @ ^2.5.2
    nanopb/Nanopb @ ^0.4.7

test_build_project_src = true
test_framework = unity
test_filter = test_time_window_system

[env:time_window_nrf52]
extends = env:nrf52_base
build_flags = 
    ${env:nrf52_base.build_flags}
    -D HAS_TIME_WINDOW
    -I src
    -I test

lib_deps =
    ${env:nrf52_base.lib_deps}
    throwtheswitch/Unity @ ^2.5.2
    nanopb/Nanopb @ ^0.4.7

test_build_project_src = true
test_framework = unity
test_filter = test_time_window_system

; Common test configuration
[test]
build_flags =
    -D UNITY_INCLUDE_DOUBLE
    -D UNITY_SUPPORT_TEST_CASES
    -D UNITY_OUTPUT_COLOR

lib_deps =
    throwtheswitch/Unity @ ^2.5.2

[env:test_native]
platform = native
framework =
build_flags = 
    ${test.build_flags}
    -D NATIVE_BUILD
    -I src
    -I test
lib_deps = ${test.lib_deps}
test_framework = unity
test_filter = test_time_window_system
test_ignore = test/test_*/
